// <auto-generated />
using System;
using Helmes.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Helmes.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210712084545_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Helmes.Domain.Entities.FinalBag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FinalBag");
                });

            modelBuilder.Entity("Helmes.Domain.Entities.LetterBag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BagNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinalBagId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinalized")
                        .HasColumnType("bit");

                    b.Property<int>("LetterCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BagNumber")
                        .IsUnique()
                        .HasFilter("[BagNumber] IS NOT NULL");

                    b.HasIndex("FinalBagId");

                    b.ToTable("LetterBag");
                });

            modelBuilder.Entity("Helmes.Domain.Entities.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParcelBagId")
                        .HasColumnType("int");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RecipientName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ParcelBagId");

                    b.HasIndex("ParcelNumber")
                        .IsUnique()
                        .HasFilter("[ParcelNumber] IS NOT NULL");

                    b.ToTable("Parcel");
                });

            modelBuilder.Entity("Helmes.Domain.Entities.ParcelBag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BagNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinalBagId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinalized")
                        .HasColumnType("bit");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BagNumber")
                        .IsUnique()
                        .HasFilter("[BagNumber] IS NOT NULL");

                    b.HasIndex("FinalBagId");

                    b.ToTable("ParcelBag");
                });

            modelBuilder.Entity("Helmes.Domain.Entities.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Airport")
                        .HasColumnType("int");

                    b.Property<int?>("BagListId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFinalized")
                        .HasColumnType("bit");

                    b.Property<string>("ShipmentNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BagListId");

                    b.HasIndex("ShipmentNumber")
                        .IsUnique()
                        .HasFilter("[ShipmentNumber] IS NOT NULL");

                    b.ToTable("Shipment");
                });

            modelBuilder.Entity("Helmes.Domain.Entities.LetterBag", b =>
                {
                    b.HasOne("Helmes.Domain.Entities.FinalBag", null)
                        .WithMany("LetterBagList")
                        .HasForeignKey("FinalBagId");
                });

            modelBuilder.Entity("Helmes.Domain.Entities.Parcel", b =>
                {
                    b.HasOne("Helmes.Domain.Entities.ParcelBag", null)
                        .WithMany("ParcelList")
                        .HasForeignKey("ParcelBagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Helmes.Domain.Entities.ParcelBag", b =>
                {
                    b.HasOne("Helmes.Domain.Entities.FinalBag", null)
                        .WithMany("ParcelBagList")
                        .HasForeignKey("FinalBagId");
                });

            modelBuilder.Entity("Helmes.Domain.Entities.Shipment", b =>
                {
                    b.HasOne("Helmes.Domain.Entities.FinalBag", "BagList")
                        .WithMany()
                        .HasForeignKey("BagListId");

                    b.Navigation("BagList");
                });

            modelBuilder.Entity("Helmes.Domain.Entities.FinalBag", b =>
                {
                    b.Navigation("LetterBagList");

                    b.Navigation("ParcelBagList");
                });

            modelBuilder.Entity("Helmes.Domain.Entities.ParcelBag", b =>
                {
                    b.Navigation("ParcelList");
                });
#pragma warning restore 612, 618
        }
    }
}
